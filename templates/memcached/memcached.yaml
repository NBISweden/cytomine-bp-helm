{{ if .Values.memcached.deploy }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cytomine.name" . }}-memcached
  labels:
    role: memcached
    app: {{ include "cytomine.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: {{ .Release.Name }}-memcached
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "cytomine.name" . }}-memcached
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        role: memcached
        app: {{ template "cytomine.name" . }}-memcached
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "cytomine.serviceAccountName" . }}
      volumes:
      - name: {{ include "cytomine.name" . }}-memcached-config
        configMap:
          name: {{ include "cytomine.name" . }}-memcached-config
      containers:
        - name: {{ .Chart.Name }}-memcached
          image: "{{ .Values.memcached.image.repository }}:{{ .Values.memcached.image.tag }}"
          imagePullPolicy: {{ .Values.memcached.image.pullPolicy }}
          volumeMounts:
            - name: {{ include "cytomine.name" . }}-memcached-config
              mountPath: /etc/memcached.conf
              subPath: memcached.conf
          ports:
            - name: memcache
              containerPort: {{ .Values.memcached.port }}
          command: ["/usr/bin/memcached"]
          args: ["-p", "{{ .Values.memcached.port }}"]
          securityContext:
            runAsUser: 497
          resources:
            {{- toYaml .Values.memcached.resources | nindent 12 }}
          livenessProbe:
            tcpSocket:
              port: memcache
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            tcpSocket:
              port: memcache
            initialDelaySeconds: 5
            timeoutSeconds: 1
{{ end }}
