{{ if .Values.nginx.deploy }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cytomine.name" . }}-nginx
  annotations:
    kube-score/ignore: pod-probes,container-security-context-user-group-id
  labels:
    role: nginx
    app: {{ include "cytomine.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: {{ .Release.Name }}-nginx
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "cytomine.name" . }}-nginx
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        role: nginx
        app: {{ template "cytomine.name" . }}-nginx
        release: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: 20000
        fsGroup: 20000
      serviceAccountName: {{ include "cytomine.serviceAccountName" . }}
      {{- with .Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: {{ include "cytomine.name" . }}-nginx-config
          configMap:
            name: {{ include "cytomine.name" . }}-nginx-config
        - name: image-temp
          persistentVolumeClaim:
            claimName: {{ template "cytomine.name" . }}-temp-image-claim
        - name: temp
          emptyDir: {}
      containers:
        - name: {{ .Chart.Name }}-nginx
          image: "{{ .Values.images.nginx }}"
          workingDir: /tmp
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "cytomine.name" . }}-nginx-global-config
          volumeMounts:
            - name: {{ include "cytomine.name" . }}-nginx-config
              mountPath: /cm_configs/etc/nginx/nginx.conf.sample
              subPath: nginx.conf.sample
            - name: image-temp
              mountPath: "/tmp/uploaded"
            - name: temp
              mountPath: "/var/cache/nginx/client_temp"
            - name: temp
              mountPath: "/var/cache/nginx/proxy_temp"
            - name: temp
              mountPath: "/var/cache/nginx/fastcgi_temp"
            - name: temp
              mountPath: "/var/cache/nginx/uwsgi_temp"
            - name: temp
              mountPath: "/var/cache/nginx/scgi_temp"
            - name: temp
              mountPath: "/var/run"
            - name: temp
              mountPath: /etc/nginx
              subPath: nginx
            - name: temp
              mountPath: /etc/nginx/proxy_temp
            - name: temp
              mountPath: /tmp
          ports:
            - name: http
              containerPort: {{ .Values.nginx.port }}
          securityContext:
            allowPrivilegeEscalation: {{ .Values.containerSecurity.allowPrivilegeEscalation }}
            privileged: {{ .Values.containerSecurity.privileged }}
            readOnlyRootFilesystem: {{ .Values.containerSecurity.readOnlyRootFilesystem }}
          resources:
            {{- toYaml .Values.nginx.resources | nindent 12 }}
      initContainers:
        - name: {{ .Chart.Name }}-nginx-init
          image: "{{ .Values.images.nginx }}"
          command:
            - /bin/sh
            - -c
            - >
              set -x;
              cp -R /etc/nginx /fix && chown -R 20000:20000 /fix/nginx;
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: {{ .Values.containerSecurity.allowPrivilegeEscalation }}
            privileged: {{ .Values.containerSecurity.privileged }}
          volumeMounts:
            - name: temp
              mountPath: /fix/
          resources:
            {{- toYaml .Values.nginx.resources | nindent 12 }}
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}
