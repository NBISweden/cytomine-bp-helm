{{ if .Values.bioformat.deploy }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cytomine.name" . }}-bioformat
  annotations:
    kube-score/ignore: pod-probes
  labels:
    role: bioformat
    app: {{ include "cytomine.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: {{ .Release.Name }}-bioformat
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "cytomine.name" . }}-bioformat
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        role: bioformat
        app: {{ template "cytomine.name" . }}-bioformat
        release: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: {{ .Values.containerSecurity.userID }}
        runAsGroup: {{ .Values.containerSecurity.groupID }}
        fsGroup: {{ .Values.containerSecurity.fsgroupID }}
      serviceAccountName: {{ include "cytomine.serviceAccountName" . }}
      {{- with .Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: images
          persistentVolumeClaim:
            claimName: {{ template "cytomine.name" . }}-image-claim
        - name: temp
          emptyDir: {}
      containers:
        - name: {{ .Chart.Name }}-bioformat
          image: "{{ .Values.images.bioformat }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          command: [ "bash", "/tmp/deploy.sh"]
          volumeMounts:
            - name: images
              mountPath: /data/images
            - name: temp
              mountPath: /tmp
          env:
          - name: BIOFORMAT_PORT
            value: "{{ .Values.bioformat.port }}"
          securityContext:
            allowPrivilegeEscalation: {{ .Values.containerSecurity.allowPrivilegeEscalation }}
            privileged: {{ .Values.containerSecurity.privileged }}
            readOnlyRootFilesystem: {{ .Values.containerSecurity.readOnlyRootFilesystem }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.bioformat.port }}
            initialDelaySeconds: 30
            failureThreshold: 10
            timeoutSeconds: 8
          readinessProbe:
            tcpSocket:
              port: {{ .Values.bioformat.port }}
            initialDelaySeconds: 30
            failureThreshold: 10
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.bioformat.resources | nindent 12 }}
      initContainers:
        - name: {{ .Chart.Name }}-bioformat-init
          image: "{{ .Values.images.bioformat }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          securityContext:
            readOnlyRootFilesystem: {{ .Values.containerSecurity.readOnlyRootFilesystem }}
          command:
            - /bin/bash
            - -c
            - >
              set -x;
              cp -r /tmp/* /fix/;
          volumeMounts:
            - name: temp
              mountPath: /fix/
          resources:
            {{- toYaml .Values.bioformat.resources | nindent 12 }}
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}
