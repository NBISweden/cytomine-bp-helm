{{ if .Values.core.deploy }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cytomine.name" . }}-core
  annotations:
    kube-score/ignore: pod-probes
  labels:
    role: core
    app: {{ include "cytomine.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: {{ .Release.Name }}-core
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "cytomine.name" . }}-core
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        role: core
        app: {{ template "cytomine.name" . }}-core
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "cytomine.serviceAccountName" . }}
      {{- with .Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: core-config
        secret:
          secretName: {{ include "cytomine.name" . }}-core-config
      - name: {{ include "cytomine.name" . }}-core-localtime
        configMap:
          name: {{ include "cytomine.name" . }}-localtime
      - name: temp
        emptyDir: {}
      containers:
        - name: {{ .Chart.Name }}-core
          image: "{{ .Values.images.core }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          envFrom:
            - configMapRef:
                name: cytomine-core-env
            - secretRef:
                name: cytomine-core-secret
          volumeMounts:
            - name: core-config
              mountPath:  /cm_configs/app/application.yml.sample
              subPath: application.yml.sample
            - name: core-config
              mountPath:  /cm_configs/app/logback.xml
              subPath: logback.xml
            - name: {{ include "cytomine.name" . }}-core-localtime
              mountPath: /etc/localtime
              subPath: Europe
            - name: temp
              mountPath: /tmp
            - name: temp
              mountPath: /app
            - name: temp
              mountPath: /javamelody-core
          ports:
            - name: http
              containerPort: {{ .Values.core.port }}
          resources:
            {{- toYaml .Values.core.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: {{ .Values.containerSecurity.allowPrivilegeEscalation }}
            privileged: {{ .Values.containerSecurity.privileged }}
            readOnlyRootFilesystem: {{ .Values.containerSecurity.readOnlyRootFilesystem }}
          livenessProbe:
            httpGet:
              path: /server/ping
              port: 8080
            initialDelaySeconds: 600
            failureThreshold: 30
            timeoutSeconds: 8
          readinessProbe:
            httpGet:
              path: /server/ping
              port: 8080
            initialDelaySeconds: 40
            failureThreshold: 4
            timeoutSeconds: 5
      initContainers:
        - name: {{ .Chart.Name }}-core-init
          image: "{{ .Values.images.core }}"
          command:
            - /bin/bash
            - -c
            - >
              set -x;
              cp -r /app/* /fix/;
          volumeMounts:
            - name: temp
              mountPath: /fix/
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}
