{{ if .Values.core.deploy }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "cytomine.name" . }}-core-config
stringData:
  application.yml.sample: |-
    spring:
      datasource:
        url: jdbc:postgresql://$POSTGIS_HOST:$POSTGIS_PORT/$POSTGIS_DB_NAME
        username: $POSTGIS_USER
        password: $POSTGIS_PASS

      mail:
        host: $SMTP_HOST
        port: $SMTP_PORT
        username: $SMTP_USER
        password: $SMPT_PASS
        auth: true

      data:
        mongodb:
          authentication-database: admin
          username: $MONGO_USER
          password: $MONGO_PASS
          database: $MONGO_DB_NAME
          port: $MONGO_PORT
          host: $MONGO_HOST

    javamelody:
      enabled: true      
      init-parameters:
        authorized-users: $JAVAMELODY_USER:$JAVAMELODY_PASS
        storage-directory: $JAVAMELODY_PATH

    logging:
      config: file:/app/logback.xml

    application:
      customUI:
        global:
          dashboard: ["ALL"]
          search: [ "ROLE_ADMIN" ]
          project: [ "ALL" ]
          ontology: [ "ROLE_ADMIN" ]
          storage: [ "ROLE_USER","ROLE_ADMIN" ]
          software: []
          activity: [ "ALL" ]
          admin: [ "ROLE_ADMIN" ]
          help: [ "ALL" ]
          feedback: ["ROLE_USER","ROLE_ADMIN"]
          explore: ["ROLE_USER","ROLE_ADMIN"]

      serverId: $SERVER_ID
      serverURL: $URL_CORE
      imageServerURL: [$URL_PIMS1, $URL_PIMS2]

      storagePath: $STORAGE_PATH
      adminPassword: $ADMIN_PASSWORD
      adminEmail: $ADMIN_EMAIL
      adminPrivateKey: $ADMIN_PRIVATE_KEY
      adminPublicKey: $ADMIN_PUBLIC_KEY
      superAdminPrivateKey: $SUPER_ADMIN_PRIVATE_KEY
      superAdminPublicKey: $SUPER_ADMIN_PUBLIC_KEY
      ImageServerPrivateKey: $IMAGE_SERVER_PRIVATE_KEY
      ImageServerPublicKey: $IMAGE_SERVER_PUBLIC_KEY
      rabbitMQPrivateKey: $RABBITMQ_PRIVATE_KEY
      rabbitMQPublicKey: $RABBITMQ_PUBLIC_KEY

      notification:
        email: your.email@gmail.com

      useHTTPInternally: false

      instanceHostWebsite: $INSTANCE_HOST_WEBSITE_URL
      instanceHostSupportMail: $INSTANCE_HOST_SUPPORT_MAIL
      instanceHostPhoneNumber: $INSTANCE_HOST_PHONE_NUMBER

      authentication:
        jwt:
          # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
          secret: $JWT_SECRET
  
  logback.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE configuration>

    <configuration scan="true">
        <include resource="org/springframework/boot/logging/logback/base.xml"/>

    <!-- The FILE and ASYNC appenders are here as examples for a production configuration -->
    <!--
        <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>logFile.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>90</maxHistory>
            </rollingPolicy>
            <encoder>
                <charset>utf-8</charset>
                <Pattern>%d %-5level [%thread] %logger{0}: %msg%n</Pattern>
            </encoder>
        </appender>

        <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
            <queueSize>512</queueSize>
            <appender-ref ref="FILE"/>
        </appender>

        <root level="${logging.level.root}">
            <appender-ref ref="ASYNC"/>
        </root>
    -->
        <logger name="org.mongodb" level="WARN"/>
        <logger name="be.cytomine" level="DEBUG"/>
        <logger name="javax.activation" level="WARN"/>
        <logger name="javax.mail" level="WARN"/>
        <logger name="javax.management.remote" level="WARN"/>
        <logger name="javax.xml.bind" level="WARN"/>
        <logger name="ch.qos.logback" level="WARN"/>
        <logger name="com.ryantenney" level="WARN"/>
        <logger name="com.sun" level="WARN"/>
        <logger name="com.zaxxer" level="WARN"/>
        <logger name="io.undertow" level="WARN"/>
        <logger name="io.undertow.websockets.jsr" level="ERROR"/>
        <logger name="org.apache" level="WARN"/>
        <logger name="org.apache.catalina.startup.DigesterFactory" level="OFF"/>
        <logger name="org.bson" level="WARN"/>
        <logger name="org.hibernate.validator" level="WARN"/>
        <logger name="org.hibernate" level="WARN"/>
        <logger name="org.hibernate.ejb.HibernatePersistence" level="OFF"/>
        <logger name="org.postgresql" level="WARN"/>
        <logger name="org.springframework" level="WARN"/>
        <logger name="org.springframework.web" level="DEBUG"/>
        <logger name="org.springframework.security" level="WARN"/>
        <logger name="org.springframework.web.socket" level="DEBUG"/>
        <logger name="org.thymeleaf" level="WARN"/>
        <logger name="org.xnio" level="WARN"/>
        <logger name="springfox" level="WARN"/>
        <logger name="sun.rmi" level="WARN"/>
        <logger name="liquibase" level="WARN"/>
        <logger name="LiquibaseSchemaResolver" level="INFO"/>
        <logger name="springfox.documentation.schema.property" level="ERROR"/>
        <logger name="sun.rmi.transport" level="WARN"/>

        <logger name="org.hibernate.engine.internal.StatefulPersistenceContext" level="ERROR"/>
        <!-->Ignore HHH000179: Narrowing proxy to class be.cytomine.domain.security.User - this operation breaks ==  ; as we have custom equals/hashcode<!-->

        <!-- https://logback.qos.ch/manual/configuration.html#shutdownHook and https://jira.qos.ch/browse/LOGBACK-1090 -->
        <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>

        <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
            <resetJUL>true</resetJUL>
        </contextListener>

    </configuration>
{{ end }}
---
{{ if .Values.core.deploy }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cytomine.name" . }}-core-env
data:
  ADMIN_EMAIL: info@cytomine.coop
  INSTANCE_HOST_PHONE_NUMBER: None
  INSTANCE_HOST_SUPPORT_MAIL: None
  REVERSE_PROXY_URL: {{ include "cytomine.name" . }}-nginx
  SERVER_ID: {{ .Values.core.server_id }}
  INSTANCE_HOST_WEBSITE_URL: {{ .Values.web_ui.url_core }}
  JAVAMELODY_PATH: /javamelody-core
  JAVAMELODY_USER: admin
  MONGO_DB_NAME: {{ include "cytomine.name" . }}
  MONGO_HOST: {{ include "cytomine.name" . }}-mongodb
  MONGO_PORT: "{{ .Values.mongodb.port }}"
  MONGO_USER: {{ .Values.mongodb.username }}
  POSTGIS_DB_NAME: {{ .Values.postgresql.user }}
  POSTGIS_HOST: {{ include "cytomine.name" . }}-postgis
  POSTGIS_PORT: "{{ .Values.postgresql.port }}"
  POSTGIS_USER: {{ .Values.postgresql.user }}
  SMTP_HOST: {{ .Values.smtpHost }}
  SMTP_PORT: "{{ .Values.smtpPort }}"
  SMTP_USER: user
  STORAGE_PATH: /data/images
  URL_CORE: {{ .Values.web_ui.url_core }}
  URL_PIMS1: {{ .Values.pims.pims_url }}
  URL_PIMS2: {{ .Values.pims.pims_url }}
{{ end }}
---
{{ if .Values.core.deploy }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "cytomine.name" . }}-core-secret
type: Opaque
stringData:
  ADMIN_PASSWORD: {{ .Values.core.admin_password }}
  ADMIN_PRIVATE_KEY: {{ .Values.core.admin_private_key }}
  ADMIN_PUBLIC_KEY: {{ .Values.core.admin_public_key }}
  JWT_SECRET: {{ .Values.core.jwt_secret }}
  RABBITMQ_PRIVATE_KEY: {{ .Values.core.rabbitmq_private_key }}
  RABBITMQ_PUBLIC_KEY: {{ .Values.core.rabbitmq_public_key }}
  SUPER_ADMIN_PRIVATE_KEY: {{ .Values.core.super_admin_private_key }}
  SUPER_ADMIN_PUBLIC_KEY: {{ .Values.core.super_admin_public_key }}
  IMAGE_SERVER_PRIVATE_KEY: {{ .Values.core.image_server_private_key }}
  IMAGE_SERVER_PUBLIC_KEY: {{ .Values.core.image_server_public_key }}
  SMTP_PASSWORD: {{ .Values.core.smtp_password }}
  JAVAMELODY_PASS: {{ .Values.core.javamelody_password }}
  POSTGIS_PASS:  {{ .Values.core.postgis_password }}
  MONGO_PASS: {{ .Values.mongodb.password }}
{{ end }}
